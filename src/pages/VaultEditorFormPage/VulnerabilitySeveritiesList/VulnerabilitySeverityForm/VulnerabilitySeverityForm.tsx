import { useTranslation } from "react-i18next";
import RemoveIcon from "assets/icons/remove-member.svg";
import { EditableContent } from "components";
import { StyledVulnerabilitySeverityForm } from "./styles";
import { IVulnerabilitySeverity } from "types/types";

type VulnerabilitySeverityFormProps = {
  index: number;
  severity: IVulnerabilitySeverity;
  severitiesCount: number;
  onChange: (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void;
  onRemove: (index: number) => void;
  addSeverity: () => void;
};

export default function VulnerabilitySeverityForm({
  index,
  severity,
  severitiesCount,
  onChange,
  onRemove,
  addSeverity,
}: VulnerabilitySeverityFormProps) {
  const { t } = useTranslation();
  const basePath = `severities.${index}`;

  return (
    <StyledVulnerabilitySeverityForm>
      <div className="severity">
        <div className="index-number">{index + 1}</div>

        <div className="content">
          <div className="subcontent">
            <div className="name">
              <label>{t("VaultEditor.severity-name")}</label>
              <EditableContent
                textInput
                colorable
                name={`${basePath}.name`}
                value={severity.name}
                onChange={onChange}
                placeholder={t("VaultEditor.severity-name-placeholder")}
              />
            </div>
            <div className="severities">
              <label>{t("VaultEditor.severity-index")}</label>
              <EditableContent
                textInput
                colorable
                name={`${basePath}.index`}
                value={severity.index}
                onChange={onChange}
                placeholder={t("VaultEditor.severity-index-placeholder")}
              />
            </div>
          </div>

          <div>
            <label>{t("VaultEditor.severity-description")}</label>
            <EditableContent
              pastable
              colorable
              name={`${basePath}.description`}
              value={severity.description}
              onChange={onChange}
              placeholder={t("VaultEditor.severity-description-placeholder")}
            />
          </div>

          <p className="description">{t("VaultEditor.nft-metadata")}</p>

          <div>
            <label>{t("VaultEditor.nft-name")}</label>
            <EditableContent
              pastable
              colorable
              name={`${basePath}.['nft-metadata'].name`}
              value={severity["nft-metadata"].name}
              onChange={onChange}
              placeholder={t("VaultEditor.nft-name-placeholder")}
            />
          </div>

          <div>
            <label>{t("VaultEditor.nft-description")}</label>
            <EditableContent
              pastable
              colorable
              name={`${basePath}.['nft-metadata'].description`}
              value={severity["nft-metadata"].description}
              onChange={onChange}
              placeholder={t("VaultEditor.nft-description-placeholder")}
            />
          </div>
        </div>
      </div>

      <div className="controller-buttons">
        {severitiesCount > 1 && (
          <button className="fill" onClick={() => onRemove(index)}>
            <img src={RemoveIcon} height={12} alt="remove-member" />
            {` ${t("VaultEditor.remove-member")}`}
          </button>
        )}
        {index === severitiesCount - 1 && (
          <button className="fill" onClick={addSeverity}>
            {t("VaultEditor.add-member")}
          </button>
        )}
      </div>
    </StyledVulnerabilitySeverityForm>
  );
}
