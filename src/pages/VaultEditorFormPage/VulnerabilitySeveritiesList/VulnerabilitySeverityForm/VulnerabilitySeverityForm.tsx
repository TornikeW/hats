import { useTranslation } from "react-i18next";
import RemoveIcon from "assets/icons/remove-member.svg";
import { FormInput } from "components";
import { StyledVulnerabilitySeverityForm } from "./styles";
import { IVulnerabilitySeverity } from "types/types";
import { newSeverity } from "pages/VaultEditorFormPage/utils";
import { useFormContext } from "react-hook-form";

type VulnerabilitySeverityFormProps = {
  index: number;
  append: (data: any) => void;
  remove: (index: number) => void;
};

export default function VulnerabilitySeverityForm({
  index,
  append,
  remove
}: VulnerabilitySeverityFormProps) {
  const { t } = useTranslation();
  const basePath = `vulnerability-severities-spec.severities.${index}`;
  const { register, watch } = useFormContext();
  const severities = watch("vulnerability-severities-spec.severities") as IVulnerabilitySeverity[];
  const severitiesCount = severities.length;

  return (
    <StyledVulnerabilitySeverityForm>
      <div className="severity">
        <div className="index-number">{index + 1}</div>

        <div className="content">
          <div className="subcontent">
            <div className="name">
              <label>{t("VaultEditor.severity-name")}</label>
              <FormInput
                {...register(`${basePath}.name`)}
                colorable
                placeholder={t("VaultEditor.severity-name-placeholder")}
              />
            </div>
            <div className="severities">
              <label>{t("VaultEditor.severity-index")}</label>
              <FormInput
                {...register(`${basePath}.index`)}
                colorable
                placeholder={t("VaultEditor.severity-index-placeholder")}
              />
            </div>
          </div>

          <div>
            <label>{t("VaultEditor.severity-description")}</label>
            <FormInput
              {...register(`${basePath}.description`)}
              type="textarea"
              pastable
              colorable
              name={`${basePath}.description`}
              placeholder={t("VaultEditor.severity-description-placeholder")}
            />
          </div>

          <p className="description">{t("VaultEditor.nft-metadata")}</p>

          <div>
            <label>{t("VaultEditor.nft-name")}</label>
            <FormInput
              {...register(`${basePath}.nft-metadata.name`)}
              type="textarea"
              pastable
              colorable
              placeholder={t("VaultEditor.nft-name-placeholder")}
            />
          </div>

          <div>
            <label>{t("VaultEditor.nft-description")}</label>
            <FormInput
              {...register(`${basePath}.nft-metadata.description`)}
              type="textarea"
              pastable
              colorable
              placeholder={t("VaultEditor.nft-description-placeholder")}
            />
          </div>
        </div>
      </div>

      <div className="controller-buttons">
        {severitiesCount > 1 && (
          <button className="fill" onClick={() => remove(index)}>
            <img src={RemoveIcon} height={12} alt="remove-member" />
            {` ${t("VaultEditor.remove-member")}`}
          </button>
        )}
        {index === severitiesCount - 1 && (
          <button className="fill" onClick={() => append(newSeverity)}>
            {t("VaultEditor.add-member")}
          </button>
        )}
      </div>
    </StyledVulnerabilitySeverityForm>
  );
}
