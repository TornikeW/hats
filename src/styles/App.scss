@import "./constants.scss";

.vaults-wrapper {
  display: flex;
  flex-wrap: wrap;
}

html {
  background-color: $dark-blue;
  color: $turquoise;
  font-size: $small;
  -webkit-scrollbar {
    display: none;
  }
  scrollbar-width: none;
  -ms-overflow-style: none;

  ::-webkit-scrollbar {
    width: 0; /* Remove scrollbar space */
    background: transparent; /* Optional: just make scrollbar invisible */
  }
}

button {
  font-family: RobotoMono;
  font-size: $small;
  border: none;
  padding: 10px;
  cursor: pointer;
  background-color: transparent;
  border: 1px solid $turquoise;
  color: $turquoise;
  font-family: RobotoMono;
  cursor: pointer;
  &:hover {
    opacity: 0.8;
  }
  &:disabled {
    pointer-events: none;
    opacity: 0.5;
  }
  &:focus {
    outline: none;
    box-shadow: none;
  }
  &.fill {
    background-color: $turquoise;
    color: $dark-blue;
  }
}

a {
  color: $white;
  text-decoration: none;
  &:hover {
    opacity: 0.8;
  }
}

/* This is used to a content div (not header and not sidebar), e.g. Honeypots, Gov, ... */
.content {
  padding-top: $header-height + 100;
  margin-left: $sidebar-width + 50;
  margin-right: 50px;
  white-space: pre-line;
}

.seperator {
  height: 1px;
  margin: 20px 0;
  background-color: $dark-turquoise;
}

/* Default input border color when not valid */
.input-error {
  border-color: $strong-red !important;
}

/* This goes with <br /> tag to break line only in mobile */
.mobile-break {
  display: none;
}

/* swiper/react styles for prev and next buttons */
.swiper-button-prev,
.swiper-button-next {
  color: $black;
  background-color: $white;
  border-radius: 50%;
  width: 15px;
  height: 15px;
  padding: 5px;
  &::after {
    font-size: $xsmall;
    font-weight: bold;
  }
}

@media only screen and (max-width: $small-screen-breakpoint) {
  html {
    font-size: $xsmall;
  }

  button {
    font-size: $xsmall;
  }
}

@media only screen and (max-width: $mobile-breakpoint) {
  .content {
    padding-top: $header-height + 50;
    margin-left: unset;
    margin-right: unset;
  }

  /* This goes with <br /> tag to break line only in mobile */
  .mobile-break {
    display: block;
  }
}
